{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","yearSelected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filterValue","setFilterValue","filteredExpenses","items","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","htmlFor","type","min","step","onClick","changeView","NewExpense","visibleForm","setVisibleForm","toogleFormVisibility","content","enteredExpenseData","enteredData","random","onAddExpenseHandler","App","INITIAL_EXPENSES","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44d4bb9b.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const yearChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.yearSelected} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n        {/* Chart Here */}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\nimport './ExpenseList.css';\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expense-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expense-list\">\r\n      {props.expenses.map((expense) => {\r\n        return <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\nif (props.maxValue > 0) {\r\n  barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n}\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{height: barFillHeight}}\r\n        ></div>\r\n      </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map(dataPoint => (\r\n        <ChartBar\r\n          key={dataPoint.label} // The label is unique in the chart\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          maxValue={totalMaximum}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Abr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'Jul', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0}\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filterValue, setFilterValue] = useState('2020');\r\n\r\n  const onChangeFilter = (year) => {\r\n    setFilterValue(year);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filterValue\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          onChangeFilter={onChangeFilter}\r\n          yearSelected={filterValue}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList expenses={filteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n\r\n    // \"Send\" data to NewExpense.js\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    // Reset inputs to initial empty values\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"inputTitle\">Title</label>\r\n          <input\r\n            id=\"inputTitle\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"inputAmount\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"inputAmount\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"inputDate\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"inputDate\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.changeView}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    // Insert id into expense data array \r\n    const enteredData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString\r\n    };\r\n\r\n    // \"Send\" data to App.js\r\n    props.onAddExpenseHandler(enteredData);\r\n\r\n    // Hide expense form after save a new one\r\n    toogleFormVisibility();\r\n  };\r\n\r\n  const [visibleForm, setVisibleForm] = useState(false);\r\n\r\n  const toogleFormVisibility = () => {\r\n    setVisibleForm(!visibleForm);\r\n  }\r\n\r\n  let content = <button type=\"button\" onClick={toogleFormVisibility}>Add New Expense</button>;\r\n\r\n  if (visibleForm) {\r\n    content = <ExpenseForm changeView={toogleFormVisibility} onSaveExpenseData={saveExpenseDataHandler} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;","import { useState } from 'react';\r\nimport Expenses from './components/Expenses/Expenses';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\n\r\nconst App = () => {\r\n  const INITIAL_EXPENSES = [\r\n    { id: 'e1', title: 'Toilet Paper', amount: 94.12, date: new Date(2020, 7, 14),},\r\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n    { id: 'e3', title: 'Car Insurance', amount: 294.67, date: new Date(2021, 2, 28),},\r\n    { id: 'e4', title: 'New Desk (Wooden)', amount: 450, date: new Date(2021, 5, 12),},\r\n  ];\r\n\r\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((previousExpenses) => {\r\n      return [expense, ...previousExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <NewExpense onAddExpenseHandler={addExpenseHandler} />\r\n        <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}